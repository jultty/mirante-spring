plugins {
  id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.andygoossens.modernizer' version '1.9.0'
    id 'com.github.spotbugs' version '6.0.8'
    id 'jacoco'
}

group = 'mirante.api'
version = '0.2.0-SNAPSHOT'

configurations {
  umlDoclet
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

tasks.register('copyDocs', Copy) {
    dependsOn jacocoTestReport, javadoc
    from layout.buildDirectory.dir("reports")
    from layout.buildDirectory.dir("docs")
    into layout.projectDirectory.dir("docs/generated")
}

task fullBuild(type: GradleBuild) {
  tasks = [ 'jacocoTestCoverageVerification', 'jacocoTestReport', 'build', 'javadoc', 'copyDocs' ]
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.3'
  implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
  implementation 'org.springframework.security:spring-security-crypto:6.2.1'
  implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-starter-web'
  testImplementation 'org.springframework.boot:spring-boot-starter-security'
  testImplementation 'org.springframework.security:spring-security-test'
  runtimeOnly 'com.h2database:h2'
  umlDoclet "nl.talsmasoftware:umldoclet:2.1.1"
}

tasks.named('test') {
  useJUnitPlatform()
}

javadoc {
  source = sourceSets.main.allJava
    options.docletpath = configurations.umlDoclet.files as List
    options.doclet = "nl.talsmasoftware.umldoclet.UMLDoclet"
}

modernizer {
  failOnViolations = true
}

spotbugs {
  ignoreFailures = true
}

jacocoTestReport {
  reports {
    xml.required = true
    csv.required = true
  }
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        minimum = 0.20
      }
    }
  }
}
